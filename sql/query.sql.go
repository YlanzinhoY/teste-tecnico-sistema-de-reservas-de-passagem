// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: query.sql

package sql

import (
	"context"
	"database/sql"
)

const createManagementRoute = `-- name: CreateManagementRoute :exec
INSERT INTO management_route (
    id,
    route_name,
    origin,
    destination
) VALUES (
    $1,
    $2,
    $3,
    $4
) RETURNING id, route_name, origin, destination
`

type CreateManagementRouteParams struct {
	ID          string
	RouteName   sql.NullString
	Origin      sql.NullString
	Destination sql.NullString
}

func (q *Queries) CreateManagementRoute(ctx context.Context, arg CreateManagementRouteParams) error {
	_, err := q.db.ExecContext(ctx, createManagementRoute,
		arg.ID,
		arg.RouteName,
		arg.Origin,
		arg.Destination,
	)
	return err
}

const getRoute = `-- name: GetRoute :one
select id, route_name, origin, destination from management_route
where id = $1 limit 1
`

func (q *Queries) GetRoute(ctx context.Context, id string) (ManagementRoute, error) {
	row := q.db.QueryRowContext(ctx, getRoute, id)
	var i ManagementRoute
	err := row.Scan(
		&i.ID,
		&i.RouteName,
		&i.Origin,
		&i.Destination,
	)
	return i, err
}

const updateManagementRoute = `-- name: UpdateManagementRoute :exec
update management_route
    set route_name =$2, origin = $3,destination = $4
where id = $1
`

type UpdateManagementRouteParams struct {
	ID          string
	RouteName   sql.NullString
	Origin      sql.NullString
	Destination sql.NullString
}

func (q *Queries) UpdateManagementRoute(ctx context.Context, arg UpdateManagementRouteParams) error {
	_, err := q.db.ExecContext(ctx, updateManagementRoute,
		arg.ID,
		arg.RouteName,
		arg.Origin,
		arg.Destination,
	)
	return err
}
